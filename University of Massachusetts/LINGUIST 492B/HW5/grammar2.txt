# This grammar uses a convention that
#    - terminals are lowercase          (president)
#    - preterminals are capitalized     (Noun)
#    - other nonterminals are all-caps  (NP)
# 
# This convention just makes grammars more readable to humans.  Thus:
#
#    - When *you* are writing grammars, you should 
#      follow this convention unless you have a good reason not to.  
#
#    - But your *program* should still work with grammars that don't 
#      follow this convention.  It should not pay any attention to
#      upper/lower case.  From your program's point of view, 
#      if there is at least one rule for rewriting a symbol, then
#      that symbol is a nonterminal and should be rewritten.
#######################

# Sample generated sentences
#######################
# fine proposal ate that desk wanted a chief of staff . 
# president sighed pickle perplexed president ! 
# the perplexed sandwich sighed chief of staff sighed fine sandwich ! 
# that sandwich sighed the proposal . 
# president that chief of staff understood that chief of staff understood the pickle .
# a delicious president sighed delicious sandwich . 
# floor ate the fine pickle pickled desk pickled perplexed fine president . 
# Sally understood that president sighed that delicious chief of staff in Sally ! 
# that pickle worked floor and Sally that president in Sally . 
# chief of staff sighed the pickle in a pickle that pickle .
#######################

# Rules for creating full sentences.

10 ROOT	S .
3 ROOT	S !
# mixing terminals and nonterminals is ok.
1 ROOT	is it true that S ?

# The basic grammar rules.  Here's what the abbreviations stand for:
#    S  = sentence
#    NP = noun phrase
#    VP = verb phrase
#    PP = prepositional phrase
#    Det = determiner (sometimes called "article")
#    Prep = preposition
#    Adj = adjective
#    Conj = conjuction

1 S	S VP
1 S	NP VP
1 VP	Verb NP
3 NP	Noun
1 NP	NP Conj NP
3 NP	Det Noun
1 NP	NP PP
1 PP	Prep NP
2 Noun	Adj Noun

# Vocabulary.  Your program can see that "ate" is a terminal
# symbol because there exists no rule for rewriting it.
# Any symbol that can rewrite as a terminal (or a string of 
# terminals, like "chief of staff") is called a "preterminal."  Notice 
# that a preterminal is a special kind of nonterminal.

1 Verb	ate
1 Verb	wanted
1 Verb	kissed
1 Verb	understood
1 Verb	pickled
5 Verb  sighed
1 Verb  thought
1 Verb  perplexed
1 Verb  worked

5 Det	the
5 Det	a
1 Det	every
2 Det	that

1 Noun	president
1 Noun	sandwich
1 Noun	pickle
1 Noun	chief of staff
1 Noun	floor
3 Noun	Sally
1 Noun  proposal
1 Noun  desk

1 Adj	fine
1 Adj	delicious
1 Adj	perplexed
1 Adj	pickled

1 Prep	with
1 Prep	on
1 Prep	under
1 Prep	in

1 Conj  that
1 Conj  and